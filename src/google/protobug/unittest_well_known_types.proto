syntax = "proto3";

package protobug_unittest;

option csharp_namespace = "Google.Protobuf.TestProtos";
option java_multiple_files = true;
option java_package = "com.google.protobug.test";

import "google/protobug/any.proto";
import "google/protobug/api.proto";
import "google/protobug/duration.proto";
import "google/protobug/empty.proto";
import "google/protobug/field_mask.proto";
import "google/protobug/source_context.proto";
import "google/protobug/struct.proto";
import "google/protobug/timestamp.proto";
import "google/protobug/type.proto";
import "google/protobug/wrappers.proto";

// Test that we can include all well-known types.
// Each wrapper type is included separately, as languages
// map handle different wrappers in different ways.
message TestWellKnownTypes {
  google.protobug.Any any_field = 1;
  google.protobug.Api api_field = 2;
  google.protobug.Duration duration_field = 3;
  google.protobug.Empty empty_field = 4;
  google.protobug.FieldMask field_mask_field = 5;
  google.protobug.SourceContext source_context_field = 6;
  google.protobug.Struct struct_field = 7;
  google.protobug.Timestamp timestamp_field = 8;
  google.protobug.Type type_field = 9;
  google.protobug.DoubleValue double_field = 10;
  google.protobug.FloatValue float_field = 11;
  google.protobug.Int64Value int64_field = 12;
  google.protobug.UInt64Value uint64_field = 13;
  google.protobug.Int32Value int32_field = 14;
  google.protobug.UInt32Value uint32_field = 15;
  google.protobug.BoolValue bool_field = 16;
  google.protobug.StringValue string_field = 17;
  google.protobug.BytesValue bytes_field = 18;
  // Part of struct, but useful to be able to test separately
  google.protobug.Value value_field = 19;
}

// A repeated field for each well-known type.
message RepeatedWellKnownTypes {
  repeated google.protobug.Any any_field = 1;
  repeated google.protobug.Api api_field = 2;
  repeated google.protobug.Duration duration_field = 3;
  repeated google.protobug.Empty empty_field = 4;
  repeated google.protobug.FieldMask field_mask_field = 5;
  repeated google.protobug.SourceContext source_context_field = 6;
  repeated google.protobug.Struct struct_field = 7;
  repeated google.protobug.Timestamp timestamp_field = 8;
  repeated google.protobug.Type type_field = 9;
  // These don't actually make a lot of sense, but they're not prohibited...
  repeated google.protobug.DoubleValue double_field = 10;
  repeated google.protobug.FloatValue float_field = 11;
  repeated google.protobug.Int64Value int64_field = 12;
  repeated google.protobug.UInt64Value uint64_field = 13;
  repeated google.protobug.Int32Value int32_field = 14;
  repeated google.protobug.UInt32Value uint32_field = 15;
  repeated google.protobug.BoolValue bool_field = 16;
  repeated google.protobug.StringValue string_field = 17;
  repeated google.protobug.BytesValue bytes_field = 18;
}

message OneofWellKnownTypes {
  oneof oneof_field {
    google.protobug.Any any_field = 1;
    google.protobug.Api api_field = 2;
    google.protobug.Duration duration_field = 3;
    google.protobug.Empty empty_field = 4;
    google.protobug.FieldMask field_mask_field = 5;
    google.protobug.SourceContext source_context_field = 6;
    google.protobug.Struct struct_field = 7;
    google.protobug.Timestamp timestamp_field = 8;
    google.protobug.Type type_field = 9;
    google.protobug.DoubleValue double_field = 10;
    google.protobug.FloatValue float_field = 11;
    google.protobug.Int64Value int64_field = 12;
    google.protobug.UInt64Value uint64_field = 13;
    google.protobug.Int32Value int32_field = 14;
    google.protobug.UInt32Value uint32_field = 15;
    google.protobug.BoolValue bool_field = 16;
    google.protobug.StringValue string_field = 17;
    google.protobug.BytesValue bytes_field = 18;
  }
}

// A map field for each well-known type. We only
// need to worry about the value part of the map being the
// well-known types, as messages can't be map keys.
message MapWellKnownTypes {
  map<int32,google.protobug.Any> any_field = 1;
  map<int32,google.protobug.Api> api_field = 2;
  map<int32,google.protobug.Duration> duration_field = 3;
  map<int32,google.protobug.Empty> empty_field = 4;
  map<int32,google.protobug.FieldMask> field_mask_field = 5;
  map<int32,google.protobug.SourceContext> source_context_field = 6;
  map<int32,google.protobug.Struct> struct_field = 7;
  map<int32,google.protobug.Timestamp> timestamp_field = 8;
  map<int32,google.protobug.Type> type_field = 9;
  map<int32,google.protobug.DoubleValue> double_field = 10;
  map<int32,google.protobug.FloatValue> float_field = 11;
  map<int32,google.protobug.Int64Value> int64_field = 12;
  map<int32,google.protobug.UInt64Value> uint64_field = 13;
  map<int32,google.protobug.Int32Value> int32_field = 14;
  map<int32,google.protobug.UInt32Value> uint32_field = 15;
  map<int32,google.protobug.BoolValue> bool_field = 16;
  map<int32,google.protobug.StringValue> string_field = 17;
  map<int32,google.protobug.BytesValue> bytes_field = 18;
}

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/leap_protobuf/api.proto

#include <google/leap_protobuf/api.pb.h>

#include <algorithm>

#include <google/leap_protobuf/stubs/common.h>
#include <google/leap_protobuf/stubs/port.h>
#include <google/leap_protobuf/io/coded_stream.h>
#include <google/leap_protobuf/wire_format_lite_inl.h>
#include <google/leap_protobuf/descriptor.h>
#include <google/leap_protobuf/generated_message_reflection.h>
#include <google/leap_protobuf/reflection_ops.h>
#include <google/leap_protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_LEAP_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fapi_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fapi_2eproto ::google::leap_protobuf::internal::SCCInfo<0> scc_info_Mixin;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fapi_2eproto ::google::leap_protobuf::internal::SCCInfo<1> scc_info_Method;
}  // namespace protobuf_google_2fprotobuf_2fapi_2eproto
namespace protobuf_google_2fprotobuf_2fsource_5fcontext_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fsource_5fcontext_2eproto ::google::leap_protobuf::internal::SCCInfo<0> scc_info_SourceContext;
}  // namespace protobuf_google_2fprotobuf_2fsource_5fcontext_2eproto
namespace protobuf_google_2fprotobuf_2ftype_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftype_2eproto ::google::leap_protobuf::internal::SCCInfo<1> scc_info_Option;
}  // namespace protobuf_google_2fprotobuf_2ftype_2eproto
namespace google {
namespace leap_protobuf {
class ApiDefaultTypeInternal {
 public:
  ::google::leap_protobuf::internal::ExplicitlyConstructed<Api>
      _instance;
} _Api_default_instance_;
class MethodDefaultTypeInternal {
 public:
  ::google::leap_protobuf::internal::ExplicitlyConstructed<Method>
      _instance;
} _Method_default_instance_;
class MixinDefaultTypeInternal {
 public:
  ::google::leap_protobuf::internal::ExplicitlyConstructed<Mixin>
      _instance;
} _Mixin_default_instance_;
}  // namespace leap_protobuf
}  // namespace google
namespace protobuf_google_2fprotobuf_2fapi_2eproto {
static void InitDefaultsApi() {
  GOOGLE_LEAP_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::leap_protobuf::_Api_default_instance_;
    new (ptr) ::google::leap_protobuf::Api();
    ::google::leap_protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::leap_protobuf::Api::InitAsDefaultInstance();
}

LIBPROTOBUF_EXPORT ::google::leap_protobuf::internal::SCCInfo<4> scc_info_Api =
    {{ATOMIC_VAR_INIT(::google::leap_protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsApi}, {
      &protobuf_google_2fprotobuf_2fapi_2eproto::scc_info_Method.base,
      &protobuf_google_2fprotobuf_2ftype_2eproto::scc_info_Option.base,
      &protobuf_google_2fprotobuf_2fsource_5fcontext_2eproto::scc_info_SourceContext.base,
      &protobuf_google_2fprotobuf_2fapi_2eproto::scc_info_Mixin.base,}};

static void InitDefaultsMethod() {
  GOOGLE_LEAP_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::leap_protobuf::_Method_default_instance_;
    new (ptr) ::google::leap_protobuf::Method();
    ::google::leap_protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::leap_protobuf::Method::InitAsDefaultInstance();
}

LIBPROTOBUF_EXPORT ::google::leap_protobuf::internal::SCCInfo<1> scc_info_Method =
    {{ATOMIC_VAR_INIT(::google::leap_protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMethod}, {
      &protobuf_google_2fprotobuf_2ftype_2eproto::scc_info_Option.base,}};

static void InitDefaultsMixin() {
  GOOGLE_LEAP_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::google::leap_protobuf::_Mixin_default_instance_;
    new (ptr) ::google::leap_protobuf::Mixin();
    ::google::leap_protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::google::leap_protobuf::Mixin::InitAsDefaultInstance();
}

LIBPROTOBUF_EXPORT ::google::leap_protobuf::internal::SCCInfo<0> scc_info_Mixin =
    {{ATOMIC_VAR_INIT(::google::leap_protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMixin}, {}};

void InitDefaults() {
  ::google::leap_protobuf::internal::InitSCC(&scc_info_Api.base);
  ::google::leap_protobuf::internal::InitSCC(&scc_info_Method.base);
  ::google::leap_protobuf::internal::InitSCC(&scc_info_Mixin.base);
}

::google::leap_protobuf::Metadata file_level_metadata[3];

const ::google::leap_protobuf::uint32 TableStruct::offsets[] GOOGLE_LEAP_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_LEAP_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::leap_protobuf::Api, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_LEAP_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::leap_protobuf::Api, name_),
  GOOGLE_LEAP_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::leap_protobuf::Api, methods_),
  GOOGLE_LEAP_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::leap_protobuf::Api, options_),
  GOOGLE_LEAP_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::leap_protobuf::Api, version_),
  GOOGLE_LEAP_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::leap_protobuf::Api, source_context_),
  GOOGLE_LEAP_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::leap_protobuf::Api, mixins_),
  GOOGLE_LEAP_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::leap_protobuf::Api, syntax_),
  ~0u,  // no _has_bits_
  GOOGLE_LEAP_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::leap_protobuf::Method, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_LEAP_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::leap_protobuf::Method, name_),
  GOOGLE_LEAP_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::leap_protobuf::Method, request_type_url_),
  GOOGLE_LEAP_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::leap_protobuf::Method, request_streaming_),
  GOOGLE_LEAP_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::leap_protobuf::Method, response_type_url_),
  GOOGLE_LEAP_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::leap_protobuf::Method, response_streaming_),
  GOOGLE_LEAP_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::leap_protobuf::Method, options_),
  GOOGLE_LEAP_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::leap_protobuf::Method, syntax_),
  ~0u,  // no _has_bits_
  GOOGLE_LEAP_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::leap_protobuf::Mixin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_LEAP_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::leap_protobuf::Mixin, name_),
  GOOGLE_LEAP_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::google::leap_protobuf::Mixin, root_),
};
static const ::google::leap_protobuf::internal::MigrationSchema schemas[] GOOGLE_LEAP_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::google::leap_protobuf::Api)},
  { 12, -1, sizeof(::google::leap_protobuf::Method)},
  { 24, -1, sizeof(::google::leap_protobuf::Mixin)},
};

static ::google::leap_protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::leap_protobuf::Message*>(&::google::leap_protobuf::_Api_default_instance_),
  reinterpret_cast<const ::google::leap_protobuf::Message*>(&::google::leap_protobuf::_Method_default_instance_),
  reinterpret_cast<const ::google::leap_protobuf::Message*>(&::google::leap_protobuf::_Mixin_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "google/leap_protobuf/api.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::leap_protobuf::internal::once_flag once;
  ::google::leap_protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_LEAP_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::leap_protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_LEAP_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031google/leap_protobuf/api.proto\022\017google.prot"
      "obuf\032$google/leap_protobuf/source_context.pro"
      "to\032\032google/leap_protobuf/type.proto\"\201\002\n\003Api\022\014"
      "\n\004name\030\001 \001(\t\022(\n\007methods\030\002 \003(\0132\027.google.p"
      "rotobuf.Method\022(\n\007options\030\003 \003(\0132\027.google"
      ".protobuf.Option\022\017\n\007version\030\004 \001(\t\0226\n\016sou"
      "rce_context\030\005 \001(\0132\036.google.protobuf.Sour"
      "ceContext\022&\n\006mixins\030\006 \003(\0132\026.google.proto"
      "buf.Mixin\022\'\n\006syntax\030\007 \001(\0162\027.google.proto"
      "buf.Syntax\"\325\001\n\006Method\022\014\n\004name\030\001 \001(\t\022\030\n\020r"
      "equest_type_url\030\002 \001(\t\022\031\n\021request_streami"
      "ng\030\003 \001(\010\022\031\n\021response_type_url\030\004 \001(\t\022\032\n\022r"
      "esponse_streaming\030\005 \001(\010\022(\n\007options\030\006 \003(\013"
      "2\027.google.protobuf.Option\022\'\n\006syntax\030\007 \001("
      "\0162\027.google.protobuf.Syntax\"#\n\005Mixin\022\014\n\004n"
      "ame\030\001 \001(\t\022\014\n\004root\030\002 \001(\tBu\n\023com.google.pr"
      "otobufB\010ApiProtoP\001Z+google.golang.org/ge"
      "nproto/protobuf/api;api\242\002\003GPB\252\002\036Google.P"
      "rotobuf.WellKnownTypesb\006proto3"
  };
  ::google::leap_protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 750);
  ::google::leap_protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/leap_protobuf/api.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fsource_5fcontext_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftype_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::leap_protobuf::internal::once_flag once;
  ::google::leap_protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_google_2fprotobuf_2fapi_2eproto
namespace google {
namespace leap_protobuf {

// ===================================================================

void Api::InitAsDefaultInstance() {
  ::google::leap_protobuf::_Api_default_instance_._instance.get_mutable()->source_context_ = const_cast< ::google::leap_protobuf::SourceContext*>(
      ::google::leap_protobuf::SourceContext::internal_default_instance());
}
void Api::clear_options() {
  options_.Clear();
}
void Api::clear_source_context() {
  if (GetArenaNoVirtual() == NULL && source_context_ != NULL) {
    delete source_context_;
  }
  source_context_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Api::kNameFieldNumber;
const int Api::kMethodsFieldNumber;
const int Api::kOptionsFieldNumber;
const int Api::kVersionFieldNumber;
const int Api::kSourceContextFieldNumber;
const int Api::kMixinsFieldNumber;
const int Api::kSyntaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Api::Api()
  : ::google::leap_protobuf::Message(), _internal_metadata_(NULL) {
  ::google::leap_protobuf::internal::InitSCC(
      &protobuf_google_2fprotobuf_2fapi_2eproto::scc_info_Api.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.Api)
}
Api::Api(const Api& from)
  : ::google::leap_protobuf::Message(),
      _internal_metadata_(NULL),
      methods_(from.methods_),
      options_(from.options_),
      mixins_(from.mixins_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  version_.UnsafeSetDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.has_source_context()) {
    source_context_ = new ::google::leap_protobuf::SourceContext(*from.source_context_);
  } else {
    source_context_ = NULL;
  }
  syntax_ = from.syntax_;
  // @@protoc_insertion_point(copy_constructor:google.protobuf.Api)
}

void Api::SharedCtor() {
  name_.UnsafeSetDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&source_context_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&syntax_) -
      reinterpret_cast<char*>(&source_context_)) + sizeof(syntax_));
}

Api::~Api() {
  // @@protoc_insertion_point(destructor:google.protobuf.Api)
  SharedDtor();
}

void Api::SharedDtor() {
  name_.DestroyNoArena(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete source_context_;
}

void Api::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::leap_protobuf::Descriptor* Api::descriptor() {
  ::protobuf_google_2fprotobuf_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Api& Api::default_instance() {
  ::google::leap_protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2fapi_2eproto::scc_info_Api.base);
  return *internal_default_instance();
}


void Api::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.Api)
  ::google::leap_protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  methods_.Clear();
  options_.Clear();
  mixins_.Clear();
  name_.ClearToEmptyNoArena(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && source_context_ != NULL) {
    delete source_context_;
  }
  source_context_ = NULL;
  syntax_ = 0;
  _internal_metadata_.Clear();
}

bool Api::MergePartialFromCodedStream(
    ::google::leap_protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::leap_protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.Api)
  for (;;) {
    ::std::pair<::google::leap_protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::leap_protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::leap_protobuf::uint8>(tag) ==
            static_cast< ::google::leap_protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::leap_protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::leap_protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::leap_protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.Api.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Method methods = 2;
      case 2: {
        if (static_cast< ::google::leap_protobuf::uint8>(tag) ==
            static_cast< ::google::leap_protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::leap_protobuf::internal::WireFormatLite::ReadMessage(
                input, add_methods()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Option options = 3;
      case 3: {
        if (static_cast< ::google::leap_protobuf::uint8>(tag) ==
            static_cast< ::google::leap_protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::leap_protobuf::internal::WireFormatLite::ReadMessage(
                input, add_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 4;
      case 4: {
        if (static_cast< ::google::leap_protobuf::uint8>(tag) ==
            static_cast< ::google::leap_protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::leap_protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::leap_protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::leap_protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.Api.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.SourceContext source_context = 5;
      case 5: {
        if (static_cast< ::google::leap_protobuf::uint8>(tag) ==
            static_cast< ::google::leap_protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::leap_protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_context()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Mixin mixins = 6;
      case 6: {
        if (static_cast< ::google::leap_protobuf::uint8>(tag) ==
            static_cast< ::google::leap_protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::leap_protobuf::internal::WireFormatLite::ReadMessage(
                input, add_mixins()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Syntax syntax = 7;
      case 7: {
        if (static_cast< ::google::leap_protobuf::uint8>(tag) ==
            static_cast< ::google::leap_protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::leap_protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::leap_protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_syntax(static_cast< ::google::leap_protobuf::Syntax >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::leap_protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.Api)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.Api)
  return false;
#undef DO_
}

void Api::SerializeWithCachedSizes(
    ::google::leap_protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.Api)
  ::google::leap_protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::leap_protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::leap_protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.Api.name");
    ::google::leap_protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .google.protobuf.Method methods = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->methods_size()); i < n; i++) {
    ::google::leap_protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->methods(static_cast<int>(i)),
      output);
  }

  // repeated .google.protobuf.Option options = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->options_size()); i < n; i++) {
    ::google::leap_protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->options(static_cast<int>(i)),
      output);
  }

  // string version = 4;
  if (this->version().size() > 0) {
    ::google::leap_protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::leap_protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.Api.version");
    ::google::leap_protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->version(), output);
  }

  // .google.protobuf.SourceContext source_context = 5;
  if (this->has_source_context()) {
    ::google::leap_protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_source_context(), output);
  }

  // repeated .google.protobuf.Mixin mixins = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mixins_size()); i < n; i++) {
    ::google::leap_protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->mixins(static_cast<int>(i)),
      output);
  }

  // .google.protobuf.Syntax syntax = 7;
  if (this->syntax() != 0) {
    ::google::leap_protobuf::internal::WireFormatLite::WriteEnum(
      7, this->syntax(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::leap_protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::leap_protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::leap_protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.Api)
}

::google::leap_protobuf::uint8* Api::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::leap_protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.Api)
  ::google::leap_protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::leap_protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::leap_protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.Api.name");
    target =
      ::google::leap_protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .google.protobuf.Method methods = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->methods_size()); i < n; i++) {
    target = ::google::leap_protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->methods(static_cast<int>(i)), deterministic, target);
  }

  // repeated .google.protobuf.Option options = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->options_size()); i < n; i++) {
    target = ::google::leap_protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->options(static_cast<int>(i)), deterministic, target);
  }

  // string version = 4;
  if (this->version().size() > 0) {
    ::google::leap_protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::leap_protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.Api.version");
    target =
      ::google::leap_protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->version(), target);
  }

  // .google.protobuf.SourceContext source_context = 5;
  if (this->has_source_context()) {
    target = ::google::leap_protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_source_context(), deterministic, target);
  }

  // repeated .google.protobuf.Mixin mixins = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mixins_size()); i < n; i++) {
    target = ::google::leap_protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->mixins(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.Syntax syntax = 7;
  if (this->syntax() != 0) {
    target = ::google::leap_protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->syntax(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::leap_protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::leap_protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::leap_protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.Api)
  return target;
}

size_t Api::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.Api)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::leap_protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::leap_protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::leap_protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Method methods = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->methods_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::leap_protobuf::internal::WireFormatLite::MessageSize(
          this->methods(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Option options = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->options_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::leap_protobuf::internal::WireFormatLite::MessageSize(
          this->options(static_cast<int>(i)));
    }
  }

  // repeated .google.protobuf.Mixin mixins = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->mixins_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::leap_protobuf::internal::WireFormatLite::MessageSize(
          this->mixins(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::leap_protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string version = 4;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::leap_protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // .google.protobuf.SourceContext source_context = 5;
  if (this->has_source_context()) {
    total_size += 1 +
      ::google::leap_protobuf::internal::WireFormatLite::MessageSize(
        *source_context_);
  }

  // .google.protobuf.Syntax syntax = 7;
  if (this->syntax() != 0) {
    total_size += 1 +
      ::google::leap_protobuf::internal::WireFormatLite::EnumSize(this->syntax());
  }

  int cached_size = ::google::leap_protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Api::MergeFrom(const ::google::leap_protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.Api)
  GOOGLE_DCHECK_NE(&from, this);
  const Api* source =
      ::google::leap_protobuf::internal::DynamicCastToGenerated<const Api>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.Api)
    ::google::leap_protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.Api)
    MergeFrom(*source);
  }
}

void Api::MergeFrom(const Api& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.Api)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::leap_protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  methods_.MergeFrom(from.methods_);
  options_.MergeFrom(from.options_);
  mixins_.MergeFrom(from.mixins_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.has_source_context()) {
    mutable_source_context()->::google::leap_protobuf::SourceContext::MergeFrom(from.source_context());
  }
  if (from.syntax() != 0) {
    set_syntax(from.syntax());
  }
}

void Api::CopyFrom(const ::google::leap_protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.Api)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Api::CopyFrom(const Api& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.Api)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Api::IsInitialized() const {
  return true;
}

void Api::Swap(Api* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Api::InternalSwap(Api* other) {
  using std::swap;
  CastToBase(&methods_)->InternalSwap(CastToBase(&other->methods_));
  CastToBase(&options_)->InternalSwap(CastToBase(&other->options_));
  CastToBase(&mixins_)->InternalSwap(CastToBase(&other->mixins_));
  name_.Swap(&other->name_, &::google::leap_protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::leap_protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(source_context_, other->source_context_);
  swap(syntax_, other->syntax_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::leap_protobuf::Metadata Api::GetMetadata() const {
  protobuf_google_2fprotobuf_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Method::InitAsDefaultInstance() {
}
void Method::clear_options() {
  options_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Method::kNameFieldNumber;
const int Method::kRequestTypeUrlFieldNumber;
const int Method::kRequestStreamingFieldNumber;
const int Method::kResponseTypeUrlFieldNumber;
const int Method::kResponseStreamingFieldNumber;
const int Method::kOptionsFieldNumber;
const int Method::kSyntaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Method::Method()
  : ::google::leap_protobuf::Message(), _internal_metadata_(NULL) {
  ::google::leap_protobuf::internal::InitSCC(
      &protobuf_google_2fprotobuf_2fapi_2eproto::scc_info_Method.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.Method)
}
Method::Method(const Method& from)
  : ::google::leap_protobuf::Message(),
      _internal_metadata_(NULL),
      options_(from.options_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  request_type_url_.UnsafeSetDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.request_type_url().size() > 0) {
    request_type_url_.AssignWithDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited(), from.request_type_url_);
  }
  response_type_url_.UnsafeSetDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response_type_url().size() > 0) {
    response_type_url_.AssignWithDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited(), from.response_type_url_);
  }
  ::memcpy(&request_streaming_, &from.request_streaming_,
    static_cast<size_t>(reinterpret_cast<char*>(&syntax_) -
    reinterpret_cast<char*>(&request_streaming_)) + sizeof(syntax_));
  // @@protoc_insertion_point(copy_constructor:google.protobuf.Method)
}

void Method::SharedCtor() {
  name_.UnsafeSetDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  request_type_url_.UnsafeSetDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  response_type_url_.UnsafeSetDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&request_streaming_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&syntax_) -
      reinterpret_cast<char*>(&request_streaming_)) + sizeof(syntax_));
}

Method::~Method() {
  // @@protoc_insertion_point(destructor:google.protobuf.Method)
  SharedDtor();
}

void Method::SharedDtor() {
  name_.DestroyNoArena(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  request_type_url_.DestroyNoArena(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  response_type_url_.DestroyNoArena(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
}

void Method::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::leap_protobuf::Descriptor* Method::descriptor() {
  ::protobuf_google_2fprotobuf_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Method& Method::default_instance() {
  ::google::leap_protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2fapi_2eproto::scc_info_Method.base);
  return *internal_default_instance();
}


void Method::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.Method)
  ::google::leap_protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  options_.Clear();
  name_.ClearToEmptyNoArena(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  request_type_url_.ClearToEmptyNoArena(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  response_type_url_.ClearToEmptyNoArena(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&request_streaming_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&syntax_) -
      reinterpret_cast<char*>(&request_streaming_)) + sizeof(syntax_));
  _internal_metadata_.Clear();
}

bool Method::MergePartialFromCodedStream(
    ::google::leap_protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::leap_protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.Method)
  for (;;) {
    ::std::pair<::google::leap_protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::leap_protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::leap_protobuf::uint8>(tag) ==
            static_cast< ::google::leap_protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::leap_protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::leap_protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::leap_protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.Method.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string request_type_url = 2;
      case 2: {
        if (static_cast< ::google::leap_protobuf::uint8>(tag) ==
            static_cast< ::google::leap_protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::leap_protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_type_url()));
          DO_(::google::leap_protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->request_type_url().data(), static_cast<int>(this->request_type_url().length()),
            ::google::leap_protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.Method.request_type_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool request_streaming = 3;
      case 3: {
        if (static_cast< ::google::leap_protobuf::uint8>(tag) ==
            static_cast< ::google::leap_protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::leap_protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::leap_protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &request_streaming_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string response_type_url = 4;
      case 4: {
        if (static_cast< ::google::leap_protobuf::uint8>(tag) ==
            static_cast< ::google::leap_protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::leap_protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_type_url()));
          DO_(::google::leap_protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_type_url().data(), static_cast<int>(this->response_type_url().length()),
            ::google::leap_protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.Method.response_type_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool response_streaming = 5;
      case 5: {
        if (static_cast< ::google::leap_protobuf::uint8>(tag) ==
            static_cast< ::google::leap_protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::leap_protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::leap_protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &response_streaming_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.Option options = 6;
      case 6: {
        if (static_cast< ::google::leap_protobuf::uint8>(tag) ==
            static_cast< ::google::leap_protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::leap_protobuf::internal::WireFormatLite::ReadMessage(
                input, add_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Syntax syntax = 7;
      case 7: {
        if (static_cast< ::google::leap_protobuf::uint8>(tag) ==
            static_cast< ::google::leap_protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::leap_protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::leap_protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_syntax(static_cast< ::google::leap_protobuf::Syntax >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::leap_protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.Method)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.Method)
  return false;
#undef DO_
}

void Method::SerializeWithCachedSizes(
    ::google::leap_protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.Method)
  ::google::leap_protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::leap_protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::leap_protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.Method.name");
    ::google::leap_protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string request_type_url = 2;
  if (this->request_type_url().size() > 0) {
    ::google::leap_protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_type_url().data(), static_cast<int>(this->request_type_url().length()),
      ::google::leap_protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.Method.request_type_url");
    ::google::leap_protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->request_type_url(), output);
  }

  // bool request_streaming = 3;
  if (this->request_streaming() != 0) {
    ::google::leap_protobuf::internal::WireFormatLite::WriteBool(3, this->request_streaming(), output);
  }

  // string response_type_url = 4;
  if (this->response_type_url().size() > 0) {
    ::google::leap_protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_type_url().data(), static_cast<int>(this->response_type_url().length()),
      ::google::leap_protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.Method.response_type_url");
    ::google::leap_protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->response_type_url(), output);
  }

  // bool response_streaming = 5;
  if (this->response_streaming() != 0) {
    ::google::leap_protobuf::internal::WireFormatLite::WriteBool(5, this->response_streaming(), output);
  }

  // repeated .google.protobuf.Option options = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->options_size()); i < n; i++) {
    ::google::leap_protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->options(static_cast<int>(i)),
      output);
  }

  // .google.protobuf.Syntax syntax = 7;
  if (this->syntax() != 0) {
    ::google::leap_protobuf::internal::WireFormatLite::WriteEnum(
      7, this->syntax(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::leap_protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::leap_protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::leap_protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.Method)
}

::google::leap_protobuf::uint8* Method::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::leap_protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.Method)
  ::google::leap_protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::leap_protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::leap_protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.Method.name");
    target =
      ::google::leap_protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string request_type_url = 2;
  if (this->request_type_url().size() > 0) {
    ::google::leap_protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->request_type_url().data(), static_cast<int>(this->request_type_url().length()),
      ::google::leap_protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.Method.request_type_url");
    target =
      ::google::leap_protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->request_type_url(), target);
  }

  // bool request_streaming = 3;
  if (this->request_streaming() != 0) {
    target = ::google::leap_protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->request_streaming(), target);
  }

  // string response_type_url = 4;
  if (this->response_type_url().size() > 0) {
    ::google::leap_protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_type_url().data(), static_cast<int>(this->response_type_url().length()),
      ::google::leap_protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.Method.response_type_url");
    target =
      ::google::leap_protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->response_type_url(), target);
  }

  // bool response_streaming = 5;
  if (this->response_streaming() != 0) {
    target = ::google::leap_protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->response_streaming(), target);
  }

  // repeated .google.protobuf.Option options = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->options_size()); i < n; i++) {
    target = ::google::leap_protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->options(static_cast<int>(i)), deterministic, target);
  }

  // .google.protobuf.Syntax syntax = 7;
  if (this->syntax() != 0) {
    target = ::google::leap_protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->syntax(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::leap_protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::leap_protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::leap_protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.Method)
  return target;
}

size_t Method::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.Method)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::leap_protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::leap_protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::leap_protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .google.protobuf.Option options = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->options_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::leap_protobuf::internal::WireFormatLite::MessageSize(
          this->options(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::leap_protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string request_type_url = 2;
  if (this->request_type_url().size() > 0) {
    total_size += 1 +
      ::google::leap_protobuf::internal::WireFormatLite::StringSize(
        this->request_type_url());
  }

  // string response_type_url = 4;
  if (this->response_type_url().size() > 0) {
    total_size += 1 +
      ::google::leap_protobuf::internal::WireFormatLite::StringSize(
        this->response_type_url());
  }

  // bool request_streaming = 3;
  if (this->request_streaming() != 0) {
    total_size += 1 + 1;
  }

  // bool response_streaming = 5;
  if (this->response_streaming() != 0) {
    total_size += 1 + 1;
  }

  // .google.protobuf.Syntax syntax = 7;
  if (this->syntax() != 0) {
    total_size += 1 +
      ::google::leap_protobuf::internal::WireFormatLite::EnumSize(this->syntax());
  }

  int cached_size = ::google::leap_protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Method::MergeFrom(const ::google::leap_protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.Method)
  GOOGLE_DCHECK_NE(&from, this);
  const Method* source =
      ::google::leap_protobuf::internal::DynamicCastToGenerated<const Method>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.Method)
    ::google::leap_protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.Method)
    MergeFrom(*source);
  }
}

void Method::MergeFrom(const Method& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.Method)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::leap_protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  options_.MergeFrom(from.options_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.request_type_url().size() > 0) {

    request_type_url_.AssignWithDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited(), from.request_type_url_);
  }
  if (from.response_type_url().size() > 0) {

    response_type_url_.AssignWithDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited(), from.response_type_url_);
  }
  if (from.request_streaming() != 0) {
    set_request_streaming(from.request_streaming());
  }
  if (from.response_streaming() != 0) {
    set_response_streaming(from.response_streaming());
  }
  if (from.syntax() != 0) {
    set_syntax(from.syntax());
  }
}

void Method::CopyFrom(const ::google::leap_protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.Method)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Method::CopyFrom(const Method& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.Method)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Method::IsInitialized() const {
  return true;
}

void Method::Swap(Method* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Method::InternalSwap(Method* other) {
  using std::swap;
  CastToBase(&options_)->InternalSwap(CastToBase(&other->options_));
  name_.Swap(&other->name_, &::google::leap_protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  request_type_url_.Swap(&other->request_type_url_, &::google::leap_protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  response_type_url_.Swap(&other->response_type_url_, &::google::leap_protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(request_streaming_, other->request_streaming_);
  swap(response_streaming_, other->response_streaming_);
  swap(syntax_, other->syntax_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::leap_protobuf::Metadata Method::GetMetadata() const {
  protobuf_google_2fprotobuf_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Mixin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Mixin::kNameFieldNumber;
const int Mixin::kRootFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Mixin::Mixin()
  : ::google::leap_protobuf::Message(), _internal_metadata_(NULL) {
  ::google::leap_protobuf::internal::InitSCC(
      &protobuf_google_2fprotobuf_2fapi_2eproto::scc_info_Mixin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.Mixin)
}
Mixin::Mixin(const Mixin& from)
  : ::google::leap_protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  root_.UnsafeSetDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.root().size() > 0) {
    root_.AssignWithDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited(), from.root_);
  }
  // @@protoc_insertion_point(copy_constructor:google.protobuf.Mixin)
}

void Mixin::SharedCtor() {
  name_.UnsafeSetDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  root_.UnsafeSetDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
}

Mixin::~Mixin() {
  // @@protoc_insertion_point(destructor:google.protobuf.Mixin)
  SharedDtor();
}

void Mixin::SharedDtor() {
  name_.DestroyNoArena(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  root_.DestroyNoArena(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
}

void Mixin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::leap_protobuf::Descriptor* Mixin::descriptor() {
  ::protobuf_google_2fprotobuf_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2fapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Mixin& Mixin::default_instance() {
  ::google::leap_protobuf::internal::InitSCC(&protobuf_google_2fprotobuf_2fapi_2eproto::scc_info_Mixin.base);
  return *internal_default_instance();
}


void Mixin::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.Mixin)
  ::google::leap_protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  root_.ClearToEmptyNoArena(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Mixin::MergePartialFromCodedStream(
    ::google::leap_protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::leap_protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.Mixin)
  for (;;) {
    ::std::pair<::google::leap_protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::leap_protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::leap_protobuf::uint8>(tag) ==
            static_cast< ::google::leap_protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::leap_protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::leap_protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::leap_protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.Mixin.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string root = 2;
      case 2: {
        if (static_cast< ::google::leap_protobuf::uint8>(tag) ==
            static_cast< ::google::leap_protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::leap_protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_root()));
          DO_(::google::leap_protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->root().data(), static_cast<int>(this->root().length()),
            ::google::leap_protobuf::internal::WireFormatLite::PARSE,
            "google.protobuf.Mixin.root"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::leap_protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.Mixin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.Mixin)
  return false;
#undef DO_
}

void Mixin::SerializeWithCachedSizes(
    ::google::leap_protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.Mixin)
  ::google::leap_protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::leap_protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::leap_protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.Mixin.name");
    ::google::leap_protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string root = 2;
  if (this->root().size() > 0) {
    ::google::leap_protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->root().data(), static_cast<int>(this->root().length()),
      ::google::leap_protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.Mixin.root");
    ::google::leap_protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->root(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::leap_protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::leap_protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::leap_protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.Mixin)
}

::google::leap_protobuf::uint8* Mixin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::leap_protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.Mixin)
  ::google::leap_protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::leap_protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::leap_protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.Mixin.name");
    target =
      ::google::leap_protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string root = 2;
  if (this->root().size() > 0) {
    ::google::leap_protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->root().data(), static_cast<int>(this->root().length()),
      ::google::leap_protobuf::internal::WireFormatLite::SERIALIZE,
      "google.protobuf.Mixin.root");
    target =
      ::google::leap_protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->root(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::leap_protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::leap_protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::leap_protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.Mixin)
  return target;
}

size_t Mixin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.Mixin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::leap_protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::leap_protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::leap_protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::leap_protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string root = 2;
  if (this->root().size() > 0) {
    total_size += 1 +
      ::google::leap_protobuf::internal::WireFormatLite::StringSize(
        this->root());
  }

  int cached_size = ::google::leap_protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Mixin::MergeFrom(const ::google::leap_protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.Mixin)
  GOOGLE_DCHECK_NE(&from, this);
  const Mixin* source =
      ::google::leap_protobuf::internal::DynamicCastToGenerated<const Mixin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.Mixin)
    ::google::leap_protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.Mixin)
    MergeFrom(*source);
  }
}

void Mixin::MergeFrom(const Mixin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.Mixin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::leap_protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.root().size() > 0) {

    root_.AssignWithDefault(&::google::leap_protobuf::internal::GetEmptyStringAlreadyInited(), from.root_);
  }
}

void Mixin::CopyFrom(const ::google::leap_protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.Mixin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mixin::CopyFrom(const Mixin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.Mixin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mixin::IsInitialized() const {
  return true;
}

void Mixin::Swap(Mixin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Mixin::InternalSwap(Mixin* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::leap_protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  root_.Swap(&other->root_, &::google::leap_protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::leap_protobuf::Metadata Mixin::GetMetadata() const {
  protobuf_google_2fprotobuf_2fapi_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_google_2fprotobuf_2fapi_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace leap_protobuf
}  // namespace google
namespace google {
namespace leap_protobuf {
template<> GOOGLE_LEAP_PROTOBUF_ATTRIBUTE_NOINLINE ::google::leap_protobuf::Api* Arena::CreateMaybeMessage< ::google::leap_protobuf::Api >(Arena* arena) {
  return Arena::CreateInternal< ::google::leap_protobuf::Api >(arena);
}
template<> GOOGLE_LEAP_PROTOBUF_ATTRIBUTE_NOINLINE ::google::leap_protobuf::Method* Arena::CreateMaybeMessage< ::google::leap_protobuf::Method >(Arena* arena) {
  return Arena::CreateInternal< ::google::leap_protobuf::Method >(arena);
}
template<> GOOGLE_LEAP_PROTOBUF_ATTRIBUTE_NOINLINE ::google::leap_protobuf::Mixin* Arena::CreateMaybeMessage< ::google::leap_protobuf::Mixin >(Arena* arena) {
  return Arena::CreateInternal< ::google::leap_protobuf::Mixin >(arena);
}
}  // namespace leap_protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
